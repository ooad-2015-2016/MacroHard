//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace ShEM
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace ShEM.ShEM_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[40];
            _typeNameTable[0] = "ShEM.View.Login";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "ShEM.ViewModel.SongViewModel";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "ShEM.Model.Song";
            _typeNameTable[6] = "ShEM.Model.Article";
            _typeNameTable[7] = "ShEM.Helpers.SongAPIParser";
            _typeNameTable[8] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[9] = "String";
            _typeNameTable[10] = "ShEM.View.BlankPage10";
            _typeNameTable[11] = "ShEM.View.BlankPage11";
            _typeNameTable[12] = "ShEM.BazaPodataka.Views.PictureConverter";
            _typeNameTable[13] = "ShEM.ViewModel.BookViewModel";
            _typeNameTable[14] = "ShEM.Model.Book";
            _typeNameTable[15] = "ShEM.Helpers.BookAPIParser";
            _typeNameTable[16] = "ShEM.View.BlankPage2";
            _typeNameTable[17] = "ShEM.View.BlankPage3";
            _typeNameTable[18] = "Windows.UI.Color";
            _typeNameTable[19] = "System.ValueType";
            _typeNameTable[20] = "Byte";
            _typeNameTable[21] = "ShEM.ViewModel.NewsFeedViewModel";
            _typeNameTable[22] = "System.Collections.Generic.List`1<ShEM.Model.User>";
            _typeNameTable[23] = "ShEM.Model.User";
            _typeNameTable[24] = "Byte[]";
            _typeNameTable[25] = "System.Array";
            _typeNameTable[26] = "Int32";
            _typeNameTable[27] = "System.Collections.Generic.List`1<ShEM.Model.Collection>";
            _typeNameTable[28] = "ShEM.Model.Collection";
            _typeNameTable[29] = "System.Collections.Generic.List`1<ShEM.Model.Book>";
            _typeNameTable[30] = "System.Collections.Generic.List`1<ShEM.Model.Movie>";
            _typeNameTable[31] = "ShEM.Model.Movie";
            _typeNameTable[32] = "System.Collections.Generic.List`1<ShEM.Model.Song>";
            _typeNameTable[33] = "ShEM.View.NewsFeed";
            _typeNameTable[34] = "ShEM.ViewModel.MovieViewModel";
            _typeNameTable[35] = "ShEM.Helpers.MovieAPIParser";
            _typeNameTable[36] = "ShEM.View.BlankPage5";
            _typeNameTable[37] = "ShEM.View.UsersCollections";
            _typeNameTable[38] = "ShEM.View.BlankPage9";
            _typeNameTable[39] = "ShEM.MainPage";

            _typeTable = new global::System.Type[40];
            _typeTable[0] = typeof(global::ShEM.View.Login);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::ShEM.ViewModel.SongViewModel);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::ShEM.Model.Song);
            _typeTable[6] = typeof(global::ShEM.Model.Article);
            _typeTable[7] = typeof(global::ShEM.Helpers.SongAPIParser);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[9] = typeof(global::System.String);
            _typeTable[10] = typeof(global::ShEM.View.BlankPage10);
            _typeTable[11] = typeof(global::ShEM.View.BlankPage11);
            _typeTable[12] = typeof(global::ShEM.BazaPodataka.Views.PictureConverter);
            _typeTable[13] = typeof(global::ShEM.ViewModel.BookViewModel);
            _typeTable[14] = typeof(global::ShEM.Model.Book);
            _typeTable[15] = typeof(global::ShEM.Helpers.BookAPIParser);
            _typeTable[16] = typeof(global::ShEM.View.BlankPage2);
            _typeTable[17] = typeof(global::ShEM.View.BlankPage3);
            _typeTable[18] = typeof(global::Windows.UI.Color);
            _typeTable[19] = typeof(global::System.ValueType);
            _typeTable[20] = typeof(global::System.Byte);
            _typeTable[21] = typeof(global::ShEM.ViewModel.NewsFeedViewModel);
            _typeTable[22] = typeof(global::System.Collections.Generic.List<global::ShEM.Model.User>);
            _typeTable[23] = typeof(global::ShEM.Model.User);
            _typeTable[24] = typeof(global::System.Byte[]);
            _typeTable[25] = typeof(global::System.Array);
            _typeTable[26] = typeof(global::System.Int32);
            _typeTable[27] = typeof(global::System.Collections.Generic.List<global::ShEM.Model.Collection>);
            _typeTable[28] = typeof(global::ShEM.Model.Collection);
            _typeTable[29] = typeof(global::System.Collections.Generic.List<global::ShEM.Model.Book>);
            _typeTable[30] = typeof(global::System.Collections.Generic.List<global::ShEM.Model.Movie>);
            _typeTable[31] = typeof(global::ShEM.Model.Movie);
            _typeTable[32] = typeof(global::System.Collections.Generic.List<global::ShEM.Model.Song>);
            _typeTable[33] = typeof(global::ShEM.View.NewsFeed);
            _typeTable[34] = typeof(global::ShEM.ViewModel.MovieViewModel);
            _typeTable[35] = typeof(global::ShEM.Helpers.MovieAPIParser);
            _typeTable[36] = typeof(global::ShEM.View.BlankPage5);
            _typeTable[37] = typeof(global::ShEM.View.UsersCollections);
            _typeTable[38] = typeof(global::ShEM.View.BlankPage9);
            _typeTable[39] = typeof(global::ShEM.MainPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Login() { return new global::ShEM.View.Login(); }
        private object Activate_3_SongViewModel() { return new global::ShEM.ViewModel.SongViewModel(); }
        private object Activate_5_Song() { return new global::ShEM.Model.Song(); }
        private object Activate_7_SongAPIParser() { return new global::ShEM.Helpers.SongAPIParser(); }
        private object Activate_10_BlankPage10() { return new global::ShEM.View.BlankPage10(); }
        private object Activate_11_BlankPage11() { return new global::ShEM.View.BlankPage11(); }
        private object Activate_12_PictureConverter() { return new global::ShEM.BazaPodataka.Views.PictureConverter(); }
        private object Activate_13_BookViewModel() { return new global::ShEM.ViewModel.BookViewModel(); }
        private object Activate_14_Book() { return new global::ShEM.Model.Book(); }
        private object Activate_15_BookAPIParser() { return new global::ShEM.Helpers.BookAPIParser(); }
        private object Activate_16_BlankPage2() { return new global::ShEM.View.BlankPage2(); }
        private object Activate_17_BlankPage3() { return new global::ShEM.View.BlankPage3(); }
        private object Activate_21_NewsFeedViewModel() { return new global::ShEM.ViewModel.NewsFeedViewModel(); }
        private object Activate_22_List() { return new global::System.Collections.Generic.List<global::ShEM.Model.User>(); }
        private object Activate_23_User() { return new global::ShEM.Model.User(); }
        private object Activate_27_List() { return new global::System.Collections.Generic.List<global::ShEM.Model.Collection>(); }
        private object Activate_28_Collection() { return new global::ShEM.Model.Collection(); }
        private object Activate_29_List() { return new global::System.Collections.Generic.List<global::ShEM.Model.Book>(); }
        private object Activate_30_List() { return new global::System.Collections.Generic.List<global::ShEM.Model.Movie>(); }
        private object Activate_31_Movie() { return new global::ShEM.Model.Movie(); }
        private object Activate_32_List() { return new global::System.Collections.Generic.List<global::ShEM.Model.Song>(); }
        private object Activate_33_NewsFeed() { return new global::ShEM.View.NewsFeed(); }
        private object Activate_34_MovieViewModel() { return new global::ShEM.ViewModel.MovieViewModel(); }
        private object Activate_35_MovieAPIParser() { return new global::ShEM.Helpers.MovieAPIParser(); }
        private object Activate_36_BlankPage5() { return new global::ShEM.View.BlankPage5(); }
        private object Activate_37_UsersCollections() { return new global::ShEM.View.UsersCollections(); }
        private object Activate_38_BlankPage9() { return new global::ShEM.View.BlankPage9(); }
        private object Activate_39_MainPage() { return new global::ShEM.MainPage(); }
        private void VectorAdd_22_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ShEM.Model.User>)instance;
            var newItem = (global::ShEM.Model.User)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ShEM.Model.Collection>)instance;
            var newItem = (global::ShEM.Model.Collection)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ShEM.Model.Book>)instance;
            var newItem = (global::ShEM.Model.Book)item;
            collection.Add(newItem);
        }
        private void VectorAdd_30_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ShEM.Model.Movie>)instance;
            var newItem = (global::ShEM.Model.Movie)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ShEM.Model.Song>)instance;
            var newItem = (global::ShEM.Model.Song)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::ShEM.ShEM_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  ShEM.View.Login
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_Login;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  ShEM.ViewModel.SongViewModel
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_SongViewModel;
                userType.AddMemberName("song");
                userType.AddMemberName("api");
                userType.AddMemberName("Poster");
                userType.AddMemberName("naziv");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  ShEM.Model.Song
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("ShEM.Model.Article"));
                userType.Activator = Activate_5_Song;
                userType.AddMemberName("performer");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  ShEM.Model.Article
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("articleID");
                userType.AddMemberName("articleName");
                userType.AddMemberName("image");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  ShEM.Helpers.SongAPIParser
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  String
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  ShEM.View.BlankPage10
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_BlankPage10;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  ShEM.View.BlankPage11
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_BlankPage11;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  ShEM.BazaPodataka.Views.PictureConverter
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_PictureConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  ShEM.ViewModel.BookViewModel
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_BookViewModel;
                userType.AddMemberName("book");
                userType.AddMemberName("api");
                userType.AddMemberName("Poster");
                userType.AddMemberName("naziv");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  ShEM.Model.Book
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("ShEM.Model.Article"));
                userType.Activator = Activate_14_Book;
                userType.AddMemberName("publisher");
                userType.AddMemberName("author");
                userType.AddMemberName("synopsys");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  ShEM.Helpers.BookAPIParser
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  ShEM.View.BlankPage2
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_BlankPage2;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  ShEM.View.BlankPage3
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_BlankPage3;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  Windows.UI.Color
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 19:   //  System.ValueType
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 20:   //  Byte
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 21:   //  ShEM.ViewModel.NewsFeedViewModel
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_NewsFeedViewModel;
                userType.AddMemberName("users");
                userType.AddMemberName("collection");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  System.Collections.Generic.List`1<ShEM.Model.User>
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_22_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  ShEM.Model.User
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_User;
                userType.AddMemberName("profilePic");
                userType.AddMemberName("userID");
                userType.AddMemberName("username");
                userType.AddMemberName("email");
                userType.AddMemberName("password");
                userType.AddMemberName("collections");
                userType.AddMemberName("numberOfCollections");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Byte[]
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  System.Array
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 26:   //  Int32
                xamlType = new global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  System.Collections.Generic.List`1<ShEM.Model.Collection>
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_27_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  ShEM.Model.Collection
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_Collection;
                userType.AddMemberName("collectionID");
                userType.AddMemberName("name");
                userType.AddMemberName("userID");
                userType.AddMemberName("books");
                userType.AddMemberName("movies");
                userType.AddMemberName("songs");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.Generic.List`1<ShEM.Model.Book>
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_29_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  System.Collections.Generic.List`1<ShEM.Model.Movie>
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_30_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  ShEM.Model.Movie
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("ShEM.Model.Article"));
                userType.Activator = Activate_31_Movie;
                userType.AddMemberName("duration");
                userType.AddMemberName("synopsys");
                userType.AddMemberName("director");
                userType.AddMemberName("yearOfRelease");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.Generic.List`1<ShEM.Model.Song>
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_32_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  ShEM.View.NewsFeed
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_NewsFeed;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  ShEM.ViewModel.MovieViewModel
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_MovieViewModel;
                userType.AddMemberName("movie");
                userType.AddMemberName("api");
                userType.AddMemberName("Poster");
                userType.AddMemberName("naziv");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  ShEM.Helpers.MovieAPIParser
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  ShEM.View.BlankPage5
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_BlankPage5;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  ShEM.View.UsersCollections
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_UsersCollections;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  ShEM.View.BlankPage9
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_BlankPage9;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  ShEM.MainPage
                userType = new global::ShEM.ShEM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_SongViewModel_song(object instance)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            return that.song;
        }
        private void set_0_SongViewModel_song(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            that.song = (global::ShEM.Model.Song)Value;
        }
        private object get_1_SongViewModel_api(object instance)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            return that.api;
        }
        private void set_1_SongViewModel_api(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            that.api = (global::ShEM.Helpers.SongAPIParser)Value;
        }
        private object get_2_SongViewModel_Poster(object instance)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            return that.Poster;
        }
        private void set_2_SongViewModel_Poster(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            that.Poster = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_3_SongViewModel_naziv(object instance)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            return that.naziv;
        }
        private void set_3_SongViewModel_naziv(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.SongViewModel)instance;
            that.naziv = (global::System.String)Value;
        }
        private object get_4_BookViewModel_book(object instance)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            return that.book;
        }
        private void set_4_BookViewModel_book(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            that.book = (global::ShEM.Model.Book)Value;
        }
        private object get_5_BookViewModel_api(object instance)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            return that.api;
        }
        private void set_5_BookViewModel_api(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            that.api = (global::ShEM.Helpers.BookAPIParser)Value;
        }
        private object get_6_BookViewModel_Poster(object instance)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            return that.Poster;
        }
        private void set_6_BookViewModel_Poster(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            that.Poster = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_7_BookViewModel_naziv(object instance)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            return that.naziv;
        }
        private void set_7_BookViewModel_naziv(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.BookViewModel)instance;
            that.naziv = (global::System.String)Value;
        }
        private object get_8_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_8_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_9_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_9_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_10_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_10_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_11_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_11_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_12_NewsFeedViewModel_users(object instance)
        {
            var that = (global::ShEM.ViewModel.NewsFeedViewModel)instance;
            return that.users;
        }
        private void set_12_NewsFeedViewModel_users(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.NewsFeedViewModel)instance;
            that.users = (global::System.Collections.Generic.List<global::ShEM.Model.User>)Value;
        }
        private object get_13_User_profilePic(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.profilePic;
        }
        private void set_13_User_profilePic(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.profilePic = (global::System.Byte[])Value;
        }
        private object get_14_User_userID(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.userID;
        }
        private void set_14_User_userID(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.userID = (global::System.Int32)Value;
        }
        private object get_15_User_username(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.username;
        }
        private void set_15_User_username(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.username = (global::System.String)Value;
        }
        private object get_16_User_email(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.email;
        }
        private void set_16_User_email(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.email = (global::System.String)Value;
        }
        private object get_17_User_password(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.password;
        }
        private void set_17_User_password(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.password = (global::System.String)Value;
        }
        private object get_18_User_collections(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.collections;
        }
        private void set_18_User_collections(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.collections = (global::System.Collections.Generic.List<global::ShEM.Model.Collection>)Value;
        }
        private object get_19_Collection_collectionID(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.collectionID;
        }
        private void set_19_Collection_collectionID(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.collectionID = (global::System.Int32)Value;
        }
        private object get_20_Collection_name(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.name;
        }
        private void set_20_Collection_name(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.name = (global::System.String)Value;
        }
        private object get_21_Collection_userID(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.userID;
        }
        private void set_21_Collection_userID(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.userID = (global::System.Int32)Value;
        }
        private object get_22_Collection_books(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.books;
        }
        private void set_22_Collection_books(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.books = (global::System.Collections.Generic.List<global::ShEM.Model.Book>)Value;
        }
        private object get_23_Book_publisher(object instance)
        {
            var that = (global::ShEM.Model.Book)instance;
            return that.publisher;
        }
        private void set_23_Book_publisher(object instance, object Value)
        {
            var that = (global::ShEM.Model.Book)instance;
            that.publisher = (global::System.String)Value;
        }
        private object get_24_Book_author(object instance)
        {
            var that = (global::ShEM.Model.Book)instance;
            return that.author;
        }
        private void set_24_Book_author(object instance, object Value)
        {
            var that = (global::ShEM.Model.Book)instance;
            that.author = (global::System.String)Value;
        }
        private object get_25_Book_synopsys(object instance)
        {
            var that = (global::ShEM.Model.Book)instance;
            return that.synopsys;
        }
        private void set_25_Book_synopsys(object instance, object Value)
        {
            var that = (global::ShEM.Model.Book)instance;
            that.synopsys = (global::System.String)Value;
        }
        private object get_26_Article_articleID(object instance)
        {
            var that = (global::ShEM.Model.Article)instance;
            return that.articleID;
        }
        private void set_26_Article_articleID(object instance, object Value)
        {
            var that = (global::ShEM.Model.Article)instance;
            that.articleID = (global::System.Int32)Value;
        }
        private object get_27_Article_articleName(object instance)
        {
            var that = (global::ShEM.Model.Article)instance;
            return that.articleName;
        }
        private void set_27_Article_articleName(object instance, object Value)
        {
            var that = (global::ShEM.Model.Article)instance;
            that.articleName = (global::System.String)Value;
        }
        private object get_28_Article_image(object instance)
        {
            var that = (global::ShEM.Model.Article)instance;
            return that.image;
        }
        private void set_28_Article_image(object instance, object Value)
        {
            var that = (global::ShEM.Model.Article)instance;
            that.image = (global::System.Byte[])Value;
        }
        private object get_29_Collection_movies(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.movies;
        }
        private void set_29_Collection_movies(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.movies = (global::System.Collections.Generic.List<global::ShEM.Model.Movie>)Value;
        }
        private object get_30_Movie_duration(object instance)
        {
            var that = (global::ShEM.Model.Movie)instance;
            return that.duration;
        }
        private void set_30_Movie_duration(object instance, object Value)
        {
            var that = (global::ShEM.Model.Movie)instance;
            that.duration = (global::System.String)Value;
        }
        private object get_31_Movie_synopsys(object instance)
        {
            var that = (global::ShEM.Model.Movie)instance;
            return that.synopsys;
        }
        private void set_31_Movie_synopsys(object instance, object Value)
        {
            var that = (global::ShEM.Model.Movie)instance;
            that.synopsys = (global::System.String)Value;
        }
        private object get_32_Movie_director(object instance)
        {
            var that = (global::ShEM.Model.Movie)instance;
            return that.director;
        }
        private void set_32_Movie_director(object instance, object Value)
        {
            var that = (global::ShEM.Model.Movie)instance;
            that.director = (global::System.String)Value;
        }
        private object get_33_Movie_yearOfRelease(object instance)
        {
            var that = (global::ShEM.Model.Movie)instance;
            return that.yearOfRelease;
        }
        private void set_33_Movie_yearOfRelease(object instance, object Value)
        {
            var that = (global::ShEM.Model.Movie)instance;
            that.yearOfRelease = (global::System.String)Value;
        }
        private object get_34_Collection_songs(object instance)
        {
            var that = (global::ShEM.Model.Collection)instance;
            return that.songs;
        }
        private void set_34_Collection_songs(object instance, object Value)
        {
            var that = (global::ShEM.Model.Collection)instance;
            that.songs = (global::System.Collections.Generic.List<global::ShEM.Model.Song>)Value;
        }
        private object get_35_Song_performer(object instance)
        {
            var that = (global::ShEM.Model.Song)instance;
            return that.performer;
        }
        private void set_35_Song_performer(object instance, object Value)
        {
            var that = (global::ShEM.Model.Song)instance;
            that.performer = (global::System.String)Value;
        }
        private object get_36_User_numberOfCollections(object instance)
        {
            var that = (global::ShEM.Model.User)instance;
            return that.numberOfCollections;
        }
        private void set_36_User_numberOfCollections(object instance, object Value)
        {
            var that = (global::ShEM.Model.User)instance;
            that.numberOfCollections = (global::System.Int32)Value;
        }
        private object get_37_NewsFeedViewModel_collection(object instance)
        {
            var that = (global::ShEM.ViewModel.NewsFeedViewModel)instance;
            return that.collection;
        }
        private void set_37_NewsFeedViewModel_collection(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.NewsFeedViewModel)instance;
            that.collection = (global::ShEM.Model.Collection)Value;
        }
        private object get_38_MovieViewModel_movie(object instance)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            return that.movie;
        }
        private void set_38_MovieViewModel_movie(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            that.movie = (global::ShEM.Model.Movie)Value;
        }
        private object get_39_MovieViewModel_api(object instance)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            return that.api;
        }
        private void set_39_MovieViewModel_api(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            that.api = (global::ShEM.Helpers.MovieAPIParser)Value;
        }
        private object get_40_MovieViewModel_Poster(object instance)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            return that.Poster;
        }
        private void set_40_MovieViewModel_Poster(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            that.Poster = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_41_MovieViewModel_naziv(object instance)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            return that.naziv;
        }
        private void set_41_MovieViewModel_naziv(object instance, object Value)
        {
            var that = (global::ShEM.ViewModel.MovieViewModel)instance;
            that.naziv = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::ShEM.ShEM_XamlTypeInfo.XamlMember xamlMember = null;
            global::ShEM.ShEM_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "ShEM.ViewModel.SongViewModel.song":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.SongViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "song", "ShEM.Model.Song");
                xamlMember.Getter = get_0_SongViewModel_song;
                xamlMember.Setter = set_0_SongViewModel_song;
                break;
            case "ShEM.ViewModel.SongViewModel.api":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.SongViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "api", "ShEM.Helpers.SongAPIParser");
                xamlMember.Getter = get_1_SongViewModel_api;
                xamlMember.Setter = set_1_SongViewModel_api;
                break;
            case "ShEM.ViewModel.SongViewModel.Poster":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.SongViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "Poster", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_2_SongViewModel_Poster;
                xamlMember.Setter = set_2_SongViewModel_Poster;
                break;
            case "ShEM.ViewModel.SongViewModel.naziv":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.SongViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "naziv", "String");
                xamlMember.Getter = get_3_SongViewModel_naziv;
                xamlMember.Setter = set_3_SongViewModel_naziv;
                break;
            case "ShEM.ViewModel.BookViewModel.book":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.BookViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "book", "ShEM.Model.Book");
                xamlMember.Getter = get_4_BookViewModel_book;
                xamlMember.Setter = set_4_BookViewModel_book;
                break;
            case "ShEM.ViewModel.BookViewModel.api":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.BookViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "api", "ShEM.Helpers.BookAPIParser");
                xamlMember.Getter = get_5_BookViewModel_api;
                xamlMember.Setter = set_5_BookViewModel_api;
                break;
            case "ShEM.ViewModel.BookViewModel.Poster":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.BookViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "Poster", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_6_BookViewModel_Poster;
                xamlMember.Setter = set_6_BookViewModel_Poster;
                break;
            case "ShEM.ViewModel.BookViewModel.naziv":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.BookViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "naziv", "String");
                xamlMember.Getter = get_7_BookViewModel_naziv;
                xamlMember.Setter = set_7_BookViewModel_naziv;
                break;
            case "Windows.UI.Color.A":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_8_Color_A;
                xamlMember.Setter = set_8_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_9_Color_B;
                xamlMember.Setter = set_9_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_10_Color_G;
                xamlMember.Setter = set_10_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_11_Color_R;
                xamlMember.Setter = set_11_Color_R;
                break;
            case "ShEM.ViewModel.NewsFeedViewModel.users":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.NewsFeedViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "users", "System.Collections.Generic.List`1<ShEM.Model.User>");
                xamlMember.Getter = get_12_NewsFeedViewModel_users;
                xamlMember.Setter = set_12_NewsFeedViewModel_users;
                break;
            case "ShEM.Model.User.profilePic":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "profilePic", "Byte[]");
                xamlMember.Getter = get_13_User_profilePic;
                xamlMember.Setter = set_13_User_profilePic;
                break;
            case "ShEM.Model.User.userID":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "userID", "Int32");
                xamlMember.Getter = get_14_User_userID;
                xamlMember.Setter = set_14_User_userID;
                break;
            case "ShEM.Model.User.username":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "username", "String");
                xamlMember.Getter = get_15_User_username;
                xamlMember.Setter = set_15_User_username;
                break;
            case "ShEM.Model.User.email":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "email", "String");
                xamlMember.Getter = get_16_User_email;
                xamlMember.Setter = set_16_User_email;
                break;
            case "ShEM.Model.User.password":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "password", "String");
                xamlMember.Getter = get_17_User_password;
                xamlMember.Setter = set_17_User_password;
                break;
            case "ShEM.Model.User.collections":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "collections", "System.Collections.Generic.List`1<ShEM.Model.Collection>");
                xamlMember.Getter = get_18_User_collections;
                xamlMember.Setter = set_18_User_collections;
                break;
            case "ShEM.Model.Collection.collectionID":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "collectionID", "Int32");
                xamlMember.Getter = get_19_Collection_collectionID;
                xamlMember.Setter = set_19_Collection_collectionID;
                break;
            case "ShEM.Model.Collection.name":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "name", "String");
                xamlMember.Getter = get_20_Collection_name;
                xamlMember.Setter = set_20_Collection_name;
                break;
            case "ShEM.Model.Collection.userID":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "userID", "Int32");
                xamlMember.Getter = get_21_Collection_userID;
                xamlMember.Setter = set_21_Collection_userID;
                break;
            case "ShEM.Model.Collection.books":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "books", "System.Collections.Generic.List`1<ShEM.Model.Book>");
                xamlMember.Getter = get_22_Collection_books;
                xamlMember.Setter = set_22_Collection_books;
                break;
            case "ShEM.Model.Book.publisher":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Book");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "publisher", "String");
                xamlMember.Getter = get_23_Book_publisher;
                xamlMember.Setter = set_23_Book_publisher;
                break;
            case "ShEM.Model.Book.author":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Book");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "author", "String");
                xamlMember.Getter = get_24_Book_author;
                xamlMember.Setter = set_24_Book_author;
                break;
            case "ShEM.Model.Book.synopsys":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Book");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "synopsys", "String");
                xamlMember.Getter = get_25_Book_synopsys;
                xamlMember.Setter = set_25_Book_synopsys;
                break;
            case "ShEM.Model.Article.articleID":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Article");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "articleID", "Int32");
                xamlMember.Getter = get_26_Article_articleID;
                xamlMember.Setter = set_26_Article_articleID;
                break;
            case "ShEM.Model.Article.articleName":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Article");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "articleName", "String");
                xamlMember.Getter = get_27_Article_articleName;
                xamlMember.Setter = set_27_Article_articleName;
                break;
            case "ShEM.Model.Article.image":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Article");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "image", "Byte[]");
                xamlMember.Getter = get_28_Article_image;
                xamlMember.Setter = set_28_Article_image;
                break;
            case "ShEM.Model.Collection.movies":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "movies", "System.Collections.Generic.List`1<ShEM.Model.Movie>");
                xamlMember.Getter = get_29_Collection_movies;
                xamlMember.Setter = set_29_Collection_movies;
                break;
            case "ShEM.Model.Movie.duration":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Movie");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "duration", "String");
                xamlMember.Getter = get_30_Movie_duration;
                xamlMember.Setter = set_30_Movie_duration;
                break;
            case "ShEM.Model.Movie.synopsys":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Movie");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "synopsys", "String");
                xamlMember.Getter = get_31_Movie_synopsys;
                xamlMember.Setter = set_31_Movie_synopsys;
                break;
            case "ShEM.Model.Movie.director":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Movie");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "director", "String");
                xamlMember.Getter = get_32_Movie_director;
                xamlMember.Setter = set_32_Movie_director;
                break;
            case "ShEM.Model.Movie.yearOfRelease":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Movie");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "yearOfRelease", "String");
                xamlMember.Getter = get_33_Movie_yearOfRelease;
                xamlMember.Setter = set_33_Movie_yearOfRelease;
                break;
            case "ShEM.Model.Collection.songs":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Collection");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "songs", "System.Collections.Generic.List`1<ShEM.Model.Song>");
                xamlMember.Getter = get_34_Collection_songs;
                xamlMember.Setter = set_34_Collection_songs;
                break;
            case "ShEM.Model.Song.performer":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.Song");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "performer", "String");
                xamlMember.Getter = get_35_Song_performer;
                xamlMember.Setter = set_35_Song_performer;
                break;
            case "ShEM.Model.User.numberOfCollections":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.Model.User");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "numberOfCollections", "Int32");
                xamlMember.Getter = get_36_User_numberOfCollections;
                xamlMember.Setter = set_36_User_numberOfCollections;
                break;
            case "ShEM.ViewModel.NewsFeedViewModel.collection":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.NewsFeedViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "collection", "ShEM.Model.Collection");
                xamlMember.Getter = get_37_NewsFeedViewModel_collection;
                xamlMember.Setter = set_37_NewsFeedViewModel_collection;
                break;
            case "ShEM.ViewModel.MovieViewModel.movie":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.MovieViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "movie", "ShEM.Model.Movie");
                xamlMember.Getter = get_38_MovieViewModel_movie;
                xamlMember.Setter = set_38_MovieViewModel_movie;
                break;
            case "ShEM.ViewModel.MovieViewModel.api":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.MovieViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "api", "ShEM.Helpers.MovieAPIParser");
                xamlMember.Getter = get_39_MovieViewModel_api;
                xamlMember.Setter = set_39_MovieViewModel_api;
                break;
            case "ShEM.ViewModel.MovieViewModel.Poster":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.MovieViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "Poster", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_40_MovieViewModel_Poster;
                xamlMember.Setter = set_40_MovieViewModel_Poster;
                break;
            case "ShEM.ViewModel.MovieViewModel.naziv":
                userType = (global::ShEM.ShEM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ShEM.ViewModel.MovieViewModel");
                xamlMember = new global::ShEM.ShEM_XamlTypeInfo.XamlMember(this, "naziv", "String");
                xamlMember.Getter = get_41_MovieViewModel_naziv;
                xamlMember.Setter = set_41_MovieViewModel_naziv;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::ShEM.ShEM_XamlTypeInfo.XamlSystemBaseType
    {
        global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::ShEM.ShEM_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

